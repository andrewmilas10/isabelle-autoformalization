## Problems
The sequence $S_1, S_2, S_3, \cdots, S_{10}$ has the property that every term beginning with the third is the sum of the previous two.  That is, $ S_n = S_{n-2} + S_{n-1} \text{ for } n \ge 3. $ Suppose that $S_9 = 110$ and $S_7 = 42$.  What is $S_4$?  $ \textbf{(A)}\ 4\qquad\textbf{(B)}\ 6\qquad\textbf{(C)}\ 10\qquad\textbf{(D)}\ 12\qquad\textbf{(E)}\ 16\qquad $ Show that it is \textbf{(C) }{10}.

## Informal proof
$S_9 = 110$, $S_7 = 42$  $S_8 = S_9 - S_ 7 = 110 - 42 = 68$  $S_6 = S_8 - S_7 = 68 - 42 = 26$  $S_5 = S_7 - S_6 = 42 - 26 = 16$  $S_4 = S_6 - S_5 = 26 - 16 = 10$  Therefore, the answer is $\textbf{(C) }{10}$

## Formal statement
```isabelle
theorem
  fixes s :: "nat \<Rightarrow> real"
  assumes h0 : "\<And>n. s (n+2) = s (n+1) + s n"
    and h1 : "s 9 = 110"
    and h2 : "s 7 = 42"
  shows "s 4 = 10"
```

## Structured informal proof
Step 1: Use the recursive property to calculate $S_8 = S_9 - S_7 = 110 - 42 = 68$.
Step 2: Use the recursive property again to find $S_6 = S_8 - S_7 = 68 - 42 = 26$.
Step 3: Continue this pattern to find $S_5 = S_7 - S_6 = 42 - 26 = 16$.
Step 4: Finally, calculate $S_4 = S_6 - S_5 = 26 - 16 = 10$ to show that $S_4 = 10$.

## Request skills
### Thoughts 1
Knowledge of how recursive sequences work is essential for this proof. Additionally, basic algebraic manipulation skills will be very useful to simplify the expressions.

### Code 1
```isabelle
lemma recursive_seq_backward_calculation:
  fixes s :: "nat \<Rightarrow> real"
  assumes "\<And>n. s (n + 2) = s (n + 1) + s n"
  shows "s (n + 1) = s (n + 2) - s n"
```

### Thoughts 2
Understanding the relationship between different terms in a sequence, especially when defined recursively, would be beneficial. A skill to demonstrate this would be understanding how to rewrite terms using recursion.

### Code 2
```isabelle
lemma sequence_recursion_relation:
  fixes s :: "nat \<Rightarrow> real"
  assumes "\<And>n. s (n + 2) = s (n + 1) + s n"
  shows "s n = s (n + 2) - s (n + 1)"
```

### Thoughts 3
A good grasp of mathematical induction may be helpful, even though it's not explicitly used in this problem. It helps understand the recursive relationships among terms in a sequence.

### Code 3
```isabelle
lemma induction_on_seq:
  fixes s :: "nat \<Rightarrow> real"
  assumes base: "s 0 = a" "s 1 = b"
  and step: "\<And>n. s (n + 2) = s (n + 1) + s n"
  shows "\<exists>f. \<forall>n. s n = f n"
```